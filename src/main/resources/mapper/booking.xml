<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper
	namespace="com.silver.hallofart.repository.interfaces.BookingRepository">

	<select id="findShowTimeListByShowId" resultType="ShowTime">
		select * from
		show_time_tb where show_id = #{showId}
	</select>
	<select id="findSeatListByShowTimeId"
		resultType="com.silver.hallofart.dto.SeatStatusDto">
		select * from seat_tb st
		left outer join
		(select status,
		seat_tb_id, show_time_tb_id, show_tb_id from booking_tb where
		show_time_tb_id = #{showTimeId} AND status != '환불') b
		on st.id =
		b.seat_tb_id
	</select>
	<select id="findHallNameByShowId" resultType="String">
		select name from
		hall_tb h join show_tb s on h.id = s.hall_tb_id
		where s.id = #{showId}
	</select>
	<select id="findSeatNameBySeatId" resultType="String">
		select seat_name
		from seat_tb where id = #{id}
	</select>
	<select id="findShowTimeByShowTimeId"
		resultType="java.sql.Timestamp">
		select start_time from show_time_tb where id = #{id}
	</select>
	<select id="findShowTimeByBookingId"
		resultType="java.sql.Timestamp">
		select start_time from show_time_tb s join booking_tb b
		on
		s.id = b.show_time_tb_id
		where b.id=#{id}
	</select>
	<select id="findShowTitleByShowId" resultType="String">
		select title from
		show_tb where id = #{id}
	</select>
	<select id="findPriceByShowId" resultType="Integer">
		select price from
		show_tb where id=#{id}
	</select>
	<select id="findBookingByshowTimeIdAndseatId"
		resultType="Booking">
		select * from booking_tb where show_time_tb_id =
		#{showTimeId} and seat_tb_id = #{seatId} and status != "환불"
	</select>
	<select id="findPriceByBookingId" resultType="Integer">
		select price from
		show_tb s join booking_tb b on s.id = b.show_tb_id
		where b.id = #{id}
	</select>
	<select id="findWaitingPaymentBookingByUserId"
		resultType="Booking">
		select * from booking_tb where user_tb_id = #{userId} and
		status = "결제 대기"
	</select>
	<select id="findSuccessPaymentBookingByUserId"
		resultType="Booking">
		select * from booking_tb where user_tb_id = #{userId} and
		status = "정상"
	</select>
	<select id="findShowTitleByBookingId" resultType="String">
		select title
		from show_tb s join booking_tb b
		on s.id = b.show_tb_id
		where b.id =
		#{id}
	</select>
	<select id="findSeatNameByBookingId" resultType="String">
		select seat_name
		from seat_tb s join booking_tb b
		on s.id = b.seat_tb_id
		where b.id =
		#{id}
	</select>
	<insert id="insertBookingInfo">
		insert into booking_tb (status, user_tb_id,
		seat_tb_id, show_time_tb_id, show_tb_id,created_at)
		values (#{status},
		#{userTbId}, #{seatTbId}, #{showTimeTbId}, #{showTbId},now())
	</insert>
	<update id="updateBookingToSuccess">
		update booking_tb set status='정상' where id = #{id}
	</update>
	<update id="updateBookingToRefund">
		update booking_tb set status='환불' where id = #{id}
	</update>
	<delete id="deleteBookingById">
		delete from booking_tb where id = #{id}
	</delete>
	<delete id="deleteNonpaymentBooking">
		delete from booking_tb where timestampdiff(minute, created_at , now()) >= 30 and status='결제 대기';
	</delete>


</mapper>